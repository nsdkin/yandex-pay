service: bill_payments
title: Bill Payments Backend
arcanum:
# 
# Review the commented section, replace logins and other texts inside !!! blocks and uncomment "review" section.
# If your a.yaml file has settings of 'arcanum\approve' merge requirement - remove it.
# Remove .devexp.json file with commiting your changes.
# In case of any questions:
# 1. Look at documentation:
#     https://docs.yandex-team.ru/arcanum/pr/devexp
#     https://docs.yandex-team.ru/arcanum/pr/review_configuration
# 2. Write to devtools support https://forms.yandex-team.ru/surveys/devtools/?service=arcanum
# 3. Join telegram channel https://t.me/+5mNt-TYK_fozNWEy
# 
#  review:
#    auto_assign: true
#    groups:
#    - name: "reviewers_group_1"
#      roles:
#      - "!!!!!! insert abc role code for staff groups (see staff api at https://staff-api.yandex-team.ru/v3/persons?_pretty=1&_one=1&login=xxxxxx&_fields=department_group.id) : 213479 !!!!!!"
#    override_policy: "override"
#    rules:
#    - reviewers:
#      - name: "reviewers_group_1"
#        ship: 1
#        assign: 1
  auto_merge:
    enabled: false
    requirements:
      - system: arcanum
        type: approved
        data:
          min_approvers_count: 1
          ignore_self_ship: false
      - system: arcanum
        type: comment_issues_closed
      - system: arcanum
        type: st_issue_linked
ci:
  release-title-source: flow
  secret: sec-01eq6tdg8ydmnnrfqkt63kbphp
  runtime:
    sandbox-owner: YANDEX-PAY
  autocheck:
    fast-targets:
      - pay/bill_payments/ya.make
      - pay/bill_payments/postgre/ya.make
  triggers:
    - on: pr
      flow: precommit-checks
  releases:
    bill-payments-deploy:
      title: Deploy Bill.Payments Backend
      flow: bill-payments-deploy-flow
      branches:
        pattern: releases/bill-payments/release-${version}
        auto-create: true
      stages:
        - id: build
          title: Build
        - id: testing
          title: Testing
        - id: load
          title: Load
        - id: production
          title: Production
  flows:
    precommit-checks:
      title: Precommit Checks Bill Payments
      jobs:
        mypy:
          title: mypy
          task: projects/finsrv/mypy
          input:
            python3_executable_path: /usr/bin/pyenv/versions/3.9.6/bin/python3
            project_path: /pay/bill_payments
            project_import_path: pay.bill_payments
            requirements:
              - mypy==0.910 --hash=sha256:c0df2d30ed496a08de5daed2a9ea807d07c21ae0ab23acf541ab88c24b26ab97
              - toml==0.10.2 --hash=sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b
              - typing-extensions==3.10.0.2 --hash=sha256:f1d25edafde516b146ecd0613dabcc61409817af4766fbbcfb8d1ad4ec441a34
              - mypy-extensions==0.4.3 --hash=sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d
          requirements:
            cores: 1
            sandbox:
              container_resource: 2459734777
        yastyle:
          title: yastyle
          task: projects/finsrv/yastyle
          input:
            python3_executable_path: /usr/bin/pyenv/versions/3.9.6/bin/python3
            project_path: /pay/bill_payments
            project_import_path: pay.bill_payments
          requirements:
            cores: 1
            sandbox:
              container_resource: 2459734777
        isort:
          title: isort
          task: projects/finsrv/isort
          input:
            python3_executable_path: /usr/bin/pyenv/versions/3.9.6/bin/python3
            project_path: /pay/bill_payments
            project_import_path: pay.bill_payments
            isort_check_path: /pay/bill_payments/bill_payments
            requirements:
              - isort==5.9.3 --hash=sha256:e17d6e2b81095c9db0a03a8025a957f334d6ea30b26f9ec70805411e5c7c81f2
          requirements:
            cores: 1
            sandbox:
              container_resource: 2459734777
    bill-payments-deploy-flow:
      title: Release flow
      jobs:
        build:
          title: Build package
          task: common/arcadia/ya_package_2
          stage: build
          input:
            packages: pay/bill_payments/package/package.json
            resource_type: BILL_PAYMENTS_BACKEND_APP
            package_type: docker
            docker_image_repository: bill-payments
            docker_push_image: true
            docker_user: robot-yandex-pay
            docker_token_vault_name: ROBOT_YANDEX_PAY_DOCKER_REGISTRY_OAUTH
            docker_build_network: host
            custom_version: "${context.version_info.full}"
        start-deploy-testing:
          title: Testing
          task: dummy
          stage: testing
          needs:
            - build
        deploy-testing:
          needs: start-deploy-testing
          title: Deploy to testing
          task: common/deploy/create_release
          stage: testing
          input:
            config:
              stage_id: bill-payments-testing
              patches: &release-patches
                - docker: &patch-api
                    docker_image_ref:
                      deploy_unit_id: api
                      box_id: api
                    image_name: "bill-payments/bill_payments:${context.version_info.full}"
                - docker: &patch-workers
                    docker_image_ref:
                      deploy_unit_id: workers
                      box_id: workers
                    image_name: "bill-payments/bill_payments:${context.version_info.full}"
        deploy-production:
          needs: deploy-testing
          title: Deploy to production
          task: common/deploy/create_release
          stage: production
          manual: true
          input:
            config:
              stage_id: bill-payments-production
              patches: *release-patches
        approve-location-man:
          task: dummy
          needs: deploy-production
          stage: production
          title: Approve location man
          manual:
            enabled: true
            prompt: "Approve man?"
        approve-du-man:
          task: common/deploy/approve_location
          needs: approve-location-man
          stage: production
          multiply:
            by: ${tasks.deploy-production.approval_locations[?cluster=='man']}
            title: "Approving location ${by.cluster} for deploy unit ${by.deploy_unit}"
            as-field: infra.deploy_ci.approve_location.Input.LocationMatcher
        approve-location-sas:
          task: dummy
          needs: approve-du-man
          stage: production
          title: Approve location sas
          manual:
            enabled: true
            prompt: "Approve sas?"
        approve-du-sas:
          task: common/deploy/approve_location
          needs: approve-location-sas
          stage: production
          multiply:
            by: ${tasks.deploy-production.approval_locations[?cluster=='sas']}
            title: "Approving location ${by.cluster} for deploy unit ${by.deploy_unit}"
            as-field: infra.deploy_ci.approve_location.Input.LocationMatcher
        approve-location-vla:
          task: dummy
          needs: approve-du-sas
          stage: production
          title: Approve location vla
          manual:
            enabled: true
            prompt: "Approve vla?"
        approve-du-vla:
          task: common/deploy/approve_location
          needs: approve-location-vla
          stage: production
          multiply:
            by: ${tasks.deploy-production.approval_locations[?cluster=='vla']}
            title: "Approving location ${by.cluster} for deploy unit ${by.deploy_unit}"
            as-field: infra.deploy_ci.approve_location.Input.LocationMatcher
