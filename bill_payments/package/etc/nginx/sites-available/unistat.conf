init_worker_by_lua_file conf.d/worker.lua;

upstream unistat-backend {
    server [::1]:8000;
}

server {
    listen [::]:8080;
    server_name unistat;

    location = /application_unistat {
        rewrite /application_unistat /unistat break;

        proxy_connect_timeout 200ms;
        proxy_read_timeout 500ms;
        proxy_send_timeout 500ms;

        proxy_pass http://unistat-backend;
    }

    location = /unistat {
        access_by_lua_block {
            unistat_data = {}

            local res = ngx.location.capture("/application_unistat")

            if (res and res.status == ngx.HTTP_OK and res.body) then
                daemon_unistat_data = cjson.decode(res.body)
                for key, val in pairs(daemon_unistat_data) do
                    unistat_data[#unistat_data + 1] = val
                end
            end

            nginx_unistat_data = get_yasm_metrics()
            for key, val in pairs(nginx_unistat_data) do
                unistat_data[#unistat_data + 1] = val
            end

            ngx.say(cjson.encode(unistat_data))
        }
    }

    access_log off;
    error_log  /var/log/nginx/error.log crit;
}